#!/bin/bash
# @author: Seb Dangerfield
# http://www.sebdangerfield.me.uk/?p=513 
# Created:   11/08/2011
# Modified:   07/01/2012
# Modified:   27/11/2012

# Modify the following to match your system
NGINX_CONFIG='/etc/nginx/sites-available'
NGINX_SITES_ENABLED='/etc/nginx/sites-enabled'
PHP_INI_DIR='/etc/php5/fpm/pool.d'
WEB_SERVER_GROUP='www-data'
NGINX_INIT='/etc/init.d/nginx'
PHP_FPM_INIT='/etc/init.d/php5-fpm'
# --------------END 
SED=`which sed`
CURRENT_DIR=`dirname $0`
SHARE_DIR='/usr/share/nginx-deploy'
PUBLIC_HTML_DIR='/public_html'

if [ -z $1 ]; then
	echo "No domain name given"
	exit 1
fi
DOMAIN=$1

# check the domain is valid!
PATTERN="^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]*[a-zA-Z0-9])\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\-]*[A-Za-z0-9])$";
if [[ "$DOMAIN" =~ $PATTERN ]]; then
	DOMAIN=`echo $DOMAIN | tr '[A-Z]' '[a-z]'`
	echo "Creating hosting for:" $DOMAIN
else
	echo "invalid domain name"
	exit 1 
fi

# Create a new user!
read -p "Specify database server (localhost):" DHOST
DHOST=${DHOST:-localhost}
read -p "Please specify the username for this site?" USERNAME
read -p "please specify a password for user $USERNAME" PASSWORD
if [ -z $USERNAME ] || [ -z $PASSWORD ] then
    echo "need both username and password"
    exit 1
fi
HOME_DIR=$USERNAME
echo -e "\n$PASSWORD\n\n\n\n\n\ny" | sudo adduser $USERNAME
echo "create database $USERNAME;grant ALL on $USERNAME.* to $USERNAME@localhost;set password for $USERNAME@localhost=password('$PASSWORD');" | mysql -h $DHOST -u root -p

# Now we need to copy the virtual host template
CONFIG=$NGINX_CONFIG/$DOMAIN.http.conf
cp $SHARE_DIR/nginx.vhost.conf.template $CONFIG
$SED -i "s/@@HOSTNAME@@/$DOMAIN/g" $CONFIG
$SED -i "s#@@PATH@@#\/home\/"$USERNAME$PUBLIC_HTML_DIR"#g" $CONFIG
$SED -i "s/@@LOG_PATH@@/\/home\/$USERNAME\/_logs/g" $CONFIG
$SED -i "s#@@SOCKET@@#/var/run/"$USERNAME"_fpm.sock#g" $CONFIG
read -p "Do you have a certificate for this domain? [y/n]" GOSSL
GOSSL=${GOSSL:-n}
if [ $GOSSL -eq "y" ] || [ $GOSSL -eq "Y" ] then
    CONFIG=$NGINX_CONFIG/$DOMAIN.https.conf
    cp $SHARE_DIR/nginx.vhost.http.conf.template $CONFIG
    $SED -i "s/@@HOSTNAME@@/$DOMAIN/g" $CONFIG
    $SED -i "s#@@PATH@@#\/home\/"$USERNAME$PUBLIC_HTML_DIR"#g" $CONFIG
    $SED -i "s/@@LOG_PATH@@/\/home\/$USERNAME\/_logs/g" $CONFIG
    $SED -i "s#@@SOCKET@@#/var/run/"$USERNAME"_fpm.sock#g" $CONFIG
fi
echo "How many FPM servers would you like by default:"
read FPM_SERVERS
read -p "Min number of FPM servers would you like:[2]" MIN_SERVERS
MIN_SERVERS=${MIN_SERVERS:-2}
read -p "Max number of FPM servers would you like:[4]" MAX_SERVERS
MAX_SERVERS=${MAX_SERVERS:=4}
# Now we need to create a new php fpm pool config
FPMCONF="$PHP_INI_DIR/$DOMAIN.pool.conf"

cp $SHARE_DIR/pool.conf.template $FPMCONF

$SED -i "s/@@USER@@/$USERNAME/g" $FPMCONF
$SED -i "s/@@HOME_DIR@@/\/home\/$USERNAME/g" $FPMCONF
$SED -i "s/@@START_SERVERS@@/$FPM_SERVERS/g" $FPMCONF
$SED -i "s/@@MIN_SERVERS@@/$MIN_SERVERS/g" $FPMCONF
$SED -i "s/@@MAX_SERVERS@@/$MAX_SERVERS/g" $FPMCONF
MAX_CHILDS=$((MAX_SERVERS+START_SERVERS))
$SED -i "s/@@MAX_CHILDS@@/$MAX_CHILDS/g" $FPMCONF

usermod -aG $USERNAME $WEB_SERVER_GROUP
chmod g+rx /home/$HOME_DIR
chmod 600 $CONFIG

ln -s $CONFIG $NGINX_SITES_ENABLED/$DOMAIN.conf

# set file perms and create required dirs!
mkdir -p /home/$HOME_DIR$PUBLIC_HTML_DIR
mkdir /home/$HOME_DIR/_logs
mkdir /home/$HOME_DIR/_sessions
chmod 750 /home/$HOME_DIR -R
chmod 700 /home/$HOME_DIR/_sessions
chmod 770 /home/$HOME_DIR/_logs
chmod 750 /home/$HOME_DIR$PUBLIC_HTML_DIR
chown $USERNAME:$USERNAME /home/$HOME_DIR/ -R

$NGINX_INIT reload
$PHP_FPM_INIT restart

echo -e "\nSite Created for $DOMAIN with PHP support"

